[general]
internal_api_secret = secret
dev_mode = true
domain =
wildcard_certificate_path =

[lms]
# Requests from an LMS
api_secret = secure

[encoder]
http_port = 9010
binary_ffmpeg = ffmpeg
binary_ffprobe = ffprobe
binary_socat = socat
hls_temp_dir = /tmp/streaming/encoder
rtmp_internal_ports = 13001-13110
rtmp_public_ports = 9011-9019,9021-9029,9051
# Leave empty if general.wildcard_certificate_path should be used.
rtmps_cert=
max_streams = 2

[content]
http_port = 9020
hls_temp_dir = /tmp/streaming/content
max_clients = 10

[manager]
http_port = 9030
cloud_deployment = false
# cloud_providers: comma separated list of providers. currently supported: hetzner
cloud_providers = hetzner
# which dns provider to use for setting DNS records. Currently supported: inwx
dns_provider = inwx
remove_orphaned_nodes = true
init_static_content_nodes = false
# comma separated lists of static node urls
static_content_node_base_urls = http://localhost:9020/
static_encoder_node_base_urls = http://localhost:9010/
static_broker_node_base_url = http://localhost:9040/
static_storage_node_base_url = http://localhost:9050/
static_distributor_node_base_urls = http://localhost:9060/
dynamic_node_name_prefix = dyn-
streams_content_node_distribution_algorithm = m-to-n

[broker]
http_port = 9040
http_retry_after = 30s

[storage]
http_port = 9050
videos_path = /tmp/streaming/storage/videos/
public_base_url = http://localhost:9050
max_file_size_mb = 200
thumb_suggestion_count = 3
thumb_height = 400
check_user =
binary_file = file
binary_ffmpeg = ffmpeg
binary_ffprobe = ffprobe
tx_max_rate_mbit = 20

[optimization]
# distribution_coefficient: the less, the more content nodes will a stream get potentially
distribution_coefficient = 2
# glpk_tmlim: limit for glpk's optimization runtime (s)
glpk_tmlim = 12

[distributor]
http_port = 9060
bound_to_storage_base_url = http://localhost:9050
tx_max_rate_mbit = 20
files_path = /tmp/streaming/distributor
leave_free_space_mb = 4000
nginx_x_accel_location =
nginx_x_accel_limit_rate_kb = 0 # KB per second, 0 disables feature

[cloud-inwx]
username =
password =

[cloud-hetzner]
api_token =
ssh_key_name = streamingkey


# Define the cloud instance types that should be used for the different node types.
# You must specify a priority (1 being the highest). If none of the instances of priority 1 are available, the
# manager tries the instances of prio 2 and so on. Within a priority level, the manager tries to choose an instance
# that suits best the current needs.
# Available section names: [manager-cloud-encoder-x] and [manager-cloud-content-x]
# Currently allowed locations for Hetzner: fsn1, nbg1, hel1
[cloud-encoder-1]
provider = hetzner
location = nbg1
server_type = cx11
priority = 1
max_streams = 1

[cloud-encoder-2]
provider = hetzner
location = nbg1
server_type = cx21
priority = 2
max_streams = 2

[cloud-content-1]
provider = hetzner
location = nbg1
server_type = cx11
priority = 1
max_clients = 50

[cloud-content-2]
provider = hetzner
location = nbg1
server_type = cx21
priority = 2
max_clients = 100

