name: CI - Tests & Checks

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  unit-tests:
    name: Unit tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v5

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Install dependencies
      run: |
        pip install -U pip
        pip install -e '.[dev]'

    - name: Run unit tests for Python ${{ matrix.python-version }}
      if: ${{ matrix.python-version != '3.11' }}
      run: python -m tests

    - name: Run unit test coverage script for Python 3.11 and save total percentage
      if: ${{ matrix.python-version == '3.11' }}
      run: |
        total=$(./scripts/cov.sh)
        [[ $? -eq 0 ]] && echo "coverage=${total}" >> $GITHUB_ENV

    outputs:
      coverage: ${{ env.coverage }}

  e2e-tests:
    name: End-to-end tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v5

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - uses: ./.github/actions/setup-ffmpeg

    - name: Install dependencies
      run: |
        pip install -U pip
        pip install -e '.[dev]'

    - name: Create temporary storage directory
      run: mkdir -p /tmp/videbo/storage

    - name: Run end-to-end tests for Python ${{ matrix.python-version }}
      run: python -m tests 'e2e_test*.py'

  lint:
    name: Linting (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v5

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Install dependencies
      run: |
        pip install -U pip
        pip install -e '.[dev]'

    - name: Run linters
      run: ./scripts/lint.sh
