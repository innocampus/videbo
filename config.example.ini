[general]
internal_api_secret = secret
dev_mode = true

[lms]
# Requests from an LMS
api_secret = secure

[encoder]
http_port = 9010
binary_ffmpeg = ffmpeg
binary_ffprobe = ffprobe
binary_socat = socat
hls_temp_dir = /tmp/streaming/encoder
passwd_length = 10
rtmp_internal_ports = 13001-13110
rtmp_public_ports = 9011-9019,9021-9029,9051
rtmps_cert=
max_streams = 2

[content]
http_port = 9020
hls_temp_dir = /tmp/streaming/content

[manager]
http_port = 9030
cloud_deployment = false
# cloud_providers: comma separated list of providers. currently supported: hetzner
cloud_providers = hetzner
# which dns provider to use for setting DNS records. Currently supported: inwx
dns_provider = inwx
remove_orphaned_nodes = true
init_static_content_nodes = false
# comma separated list of static node ips
static_content_nodes_ips = ""

# TODO: make provider config generic... e.g. [hetzner] ...
hetzner_api_token = "xxx"
hetzner_server_type = cx11
hetzner_image = debian-10
# allowed locations: fsn1, nbg1, hel1
hetzner_location = nbg1
hetzner_ssh_key = streamingkey

[broker]
http_port = 9040
http_retry_after = 30s

[cloud-inwx]
username =
password =


# Define the cloud instance types that should be used for the different node types.
# You must specify a priority (1 being the highest). If none of the instances of priority 1 are available, the
# manager tries the instances of prio 2 and so on. Within a priority level, the manager tries to choose an instance
# that suits best the current needs.
# Available section names: [manager-cloud-encoder-x] and [manager-cloud-content-x]
[cloud-encoder-1]
provider = hetzner
location = nbg1
server_type = cx11
priority = 1
max_streams = 1

[cloud-encoder-2]
provider = hetzner
location = nbg1
server_type = cx21
priority = 2
max_streams = 2

[cloud-content-1]
provider = hetzner
location = nbg1
server_type = cx11
priority = 1
max_clients = 50

[cloud-content-2]
provider = hetzner
location = nbg1
server_type = cx21
priority = 1
max_clients = 100

